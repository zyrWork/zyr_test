<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mapper.AccountMapper">
  <resultMap id="BaseResultMap" type="pojo.Account">
    <id column="account_serial" jdbcType="INTEGER" property="accountSerial" />
    <result column="account_id" jdbcType="INTEGER" property="accountId" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="salt" jdbcType="VARCHAR" property="salt" />
    <result column="nickname" jdbcType="VARCHAR" property="nickname" />
    <result column="account_type" jdbcType="SMALLINT" property="accountType" />
    <result column="is_enabled" jdbcType="BIT" property="isEnabled" />
    <result column="last_login" jdbcType="VARCHAR" property="lastLogin" />
    <result column="is_delete" jdbcType="BIT" property="isDelete" />
    <result column="delete_time" jdbcType="VARCHAR" property="deleteTime" />
    <result column="create_time" jdbcType="VARCHAR" property="createTime" />
    <result column="last_modified" jdbcType="VARCHAR" property="lastModified" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    account_serial, account_id, phone, password, salt, nickname, account_type, is_enabled, 
    last_login, is_delete, delete_time, create_time, last_modified
  </sql>
  <select id="selectByExample" parameterType="pojo.AccountExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from account
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from account
    where account_serial = #{accountSerial,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from account
    where account_serial = #{accountSerial,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="pojo.AccountExample">
    delete from account
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="pojo.Account">
    insert into account (account_serial, account_id, phone, 
      password, salt, nickname, 
      account_type, is_enabled, last_login, 
      is_delete, delete_time, create_time, 
      last_modified)
    values (#{accountSerial,jdbcType=INTEGER}, #{accountId,jdbcType=INTEGER}, #{phone,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{salt,jdbcType=VARCHAR}, #{nickname,jdbcType=VARCHAR}, 
      #{accountType,jdbcType=SMALLINT}, #{isEnabled,jdbcType=BIT}, #{lastLogin,jdbcType=VARCHAR}, 
      #{isDelete,jdbcType=BIT}, #{deleteTime,jdbcType=VARCHAR}, #{createTime,jdbcType=VARCHAR}, 
      #{lastModified,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="pojo.Account">
    insert into account
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="accountSerial != null">
        account_serial,
      </if>
      <if test="accountId != null">
        account_id,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="salt != null">
        salt,
      </if>
      <if test="nickname != null">
        nickname,
      </if>
      <if test="accountType != null">
        account_type,
      </if>
      <if test="isEnabled != null">
        is_enabled,
      </if>
      <if test="lastLogin != null">
        last_login,
      </if>
      <if test="isDelete != null">
        is_delete,
      </if>
      <if test="deleteTime != null">
        delete_time,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="lastModified != null">
        last_modified,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="accountSerial != null">
        #{accountSerial,jdbcType=INTEGER},
      </if>
      <if test="accountId != null">
        #{accountId,jdbcType=INTEGER},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="salt != null">
        #{salt,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null">
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="accountType != null">
        #{accountType,jdbcType=SMALLINT},
      </if>
      <if test="isEnabled != null">
        #{isEnabled,jdbcType=BIT},
      </if>
      <if test="lastLogin != null">
        #{lastLogin,jdbcType=VARCHAR},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=BIT},
      </if>
      <if test="deleteTime != null">
        #{deleteTime,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="lastModified != null">
        #{lastModified,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="pojo.AccountExample" resultType="java.lang.Long">
    select count(*) from account
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update account
    <set>
      <if test="record.accountSerial != null">
        account_serial = #{record.accountSerial,jdbcType=INTEGER},
      </if>
      <if test="record.accountId != null">
        account_id = #{record.accountId,jdbcType=INTEGER},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.salt != null">
        salt = #{record.salt,jdbcType=VARCHAR},
      </if>
      <if test="record.nickname != null">
        nickname = #{record.nickname,jdbcType=VARCHAR},
      </if>
      <if test="record.accountType != null">
        account_type = #{record.accountType,jdbcType=SMALLINT},
      </if>
      <if test="record.isEnabled != null">
        is_enabled = #{record.isEnabled,jdbcType=BIT},
      </if>
      <if test="record.lastLogin != null">
        last_login = #{record.lastLogin,jdbcType=VARCHAR},
      </if>
      <if test="record.isDelete != null">
        is_delete = #{record.isDelete,jdbcType=BIT},
      </if>
      <if test="record.deleteTime != null">
        delete_time = #{record.deleteTime,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=VARCHAR},
      </if>
      <if test="record.lastModified != null">
        last_modified = #{record.lastModified,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update account
    set account_serial = #{record.accountSerial,jdbcType=INTEGER},
      account_id = #{record.accountId,jdbcType=INTEGER},
      phone = #{record.phone,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      salt = #{record.salt,jdbcType=VARCHAR},
      nickname = #{record.nickname,jdbcType=VARCHAR},
      account_type = #{record.accountType,jdbcType=SMALLINT},
      is_enabled = #{record.isEnabled,jdbcType=BIT},
      last_login = #{record.lastLogin,jdbcType=VARCHAR},
      is_delete = #{record.isDelete,jdbcType=BIT},
      delete_time = #{record.deleteTime,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=VARCHAR},
      last_modified = #{record.lastModified,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="pojo.Account">
    update account
    <set>
      <if test="accountId != null">
        account_id = #{accountId,jdbcType=INTEGER},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="salt != null">
        salt = #{salt,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null">
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="accountType != null">
        account_type = #{accountType,jdbcType=SMALLINT},
      </if>
      <if test="isEnabled != null">
        is_enabled = #{isEnabled,jdbcType=BIT},
      </if>
      <if test="lastLogin != null">
        last_login = #{lastLogin,jdbcType=VARCHAR},
      </if>
      <if test="isDelete != null">
        is_delete = #{isDelete,jdbcType=BIT},
      </if>
      <if test="deleteTime != null">
        delete_time = #{deleteTime,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="lastModified != null">
        last_modified = #{lastModified,jdbcType=VARCHAR},
      </if>
    </set>
    where account_serial = #{accountSerial,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="pojo.Account">
    update account
    set account_id = #{accountId,jdbcType=INTEGER},
      phone = #{phone,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      salt = #{salt,jdbcType=VARCHAR},
      nickname = #{nickname,jdbcType=VARCHAR},
      account_type = #{accountType,jdbcType=SMALLINT},
      is_enabled = #{isEnabled,jdbcType=BIT},
      last_login = #{lastLogin,jdbcType=VARCHAR},
      is_delete = #{isDelete,jdbcType=BIT},
      delete_time = #{deleteTime,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=VARCHAR},
      last_modified = #{lastModified,jdbcType=VARCHAR}
    where account_serial = #{accountSerial,jdbcType=INTEGER}
  </update>
</mapper>