<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mapper.PointsChangeMapper">
  <resultMap id="BaseResultMap" type="pojo.PointsChange">
    <id column="points_change_serial" jdbcType="INTEGER" property="pointsChangeSerial" />
    <result column="points_id" jdbcType="INTEGER" property="pointsId" />
    <result column="change_type" jdbcType="SMALLINT" property="changeType" />
    <result column="change_amount" jdbcType="INTEGER" property="changeAmount" />
    <result column="points_balance" jdbcType="INTEGER" property="pointsBalance" />
    <result column="create_time" jdbcType="VARCHAR" property="createTime" />
    <result column="description" jdbcType="VARCHAR" property="description" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    points_change_serial, points_id, change_type, change_amount, points_balance, create_time, 
    description
  </sql>
  <select id="selectByExample" parameterType="pojo.PointsChangeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from points_change
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from points_change
    where points_change_serial = #{pointsChangeSerial,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from points_change
    where points_change_serial = #{pointsChangeSerial,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="pojo.PointsChangeExample">
    delete from points_change
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="pojo.PointsChange">
    insert into points_change (points_change_serial, points_id, change_type, 
      change_amount, points_balance, create_time, 
      description)
    values (#{pointsChangeSerial,jdbcType=INTEGER}, #{pointsId,jdbcType=INTEGER}, #{changeType,jdbcType=SMALLINT}, 
      #{changeAmount,jdbcType=INTEGER}, #{pointsBalance,jdbcType=INTEGER}, #{createTime,jdbcType=VARCHAR}, 
      #{description,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="pojo.PointsChange">
    insert into points_change
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="pointsChangeSerial != null">
        points_change_serial,
      </if>
      <if test="pointsId != null">
        points_id,
      </if>
      <if test="changeType != null">
        change_type,
      </if>
      <if test="changeAmount != null">
        change_amount,
      </if>
      <if test="pointsBalance != null">
        points_balance,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="description != null">
        description,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="pointsChangeSerial != null">
        #{pointsChangeSerial,jdbcType=INTEGER},
      </if>
      <if test="pointsId != null">
        #{pointsId,jdbcType=INTEGER},
      </if>
      <if test="changeType != null">
        #{changeType,jdbcType=SMALLINT},
      </if>
      <if test="changeAmount != null">
        #{changeAmount,jdbcType=INTEGER},
      </if>
      <if test="pointsBalance != null">
        #{pointsBalance,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="pojo.PointsChangeExample" resultType="java.lang.Long">
    select count(*) from points_change
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update points_change
    <set>
      <if test="record.pointsChangeSerial != null">
        points_change_serial = #{record.pointsChangeSerial,jdbcType=INTEGER},
      </if>
      <if test="record.pointsId != null">
        points_id = #{record.pointsId,jdbcType=INTEGER},
      </if>
      <if test="record.changeType != null">
        change_type = #{record.changeType,jdbcType=SMALLINT},
      </if>
      <if test="record.changeAmount != null">
        change_amount = #{record.changeAmount,jdbcType=INTEGER},
      </if>
      <if test="record.pointsBalance != null">
        points_balance = #{record.pointsBalance,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update points_change
    set points_change_serial = #{record.pointsChangeSerial,jdbcType=INTEGER},
      points_id = #{record.pointsId,jdbcType=INTEGER},
      change_type = #{record.changeType,jdbcType=SMALLINT},
      change_amount = #{record.changeAmount,jdbcType=INTEGER},
      points_balance = #{record.pointsBalance,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=VARCHAR},
      description = #{record.description,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="pojo.PointsChange">
    update points_change
    <set>
      <if test="pointsId != null">
        points_id = #{pointsId,jdbcType=INTEGER},
      </if>
      <if test="changeType != null">
        change_type = #{changeType,jdbcType=SMALLINT},
      </if>
      <if test="changeAmount != null">
        change_amount = #{changeAmount,jdbcType=INTEGER},
      </if>
      <if test="pointsBalance != null">
        points_balance = #{pointsBalance,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
    </set>
    where points_change_serial = #{pointsChangeSerial,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="pojo.PointsChange">
    update points_change
    set points_id = #{pointsId,jdbcType=INTEGER},
      change_type = #{changeType,jdbcType=SMALLINT},
      change_amount = #{changeAmount,jdbcType=INTEGER},
      points_balance = #{pointsBalance,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR}
    where points_change_serial = #{pointsChangeSerial,jdbcType=INTEGER}
  </update>
</mapper>