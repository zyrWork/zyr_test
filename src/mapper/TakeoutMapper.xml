<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mapper.TakeoutMapper">
  <resultMap id="BaseResultMap" type="pojo.Takeout">
    <id column="takeout_serial" jdbcType="INTEGER" property="takeoutSerial" />
    <result column="takeout_id" jdbcType="INTEGER" property="takeoutId" />
    <result column="shop_account_id" jdbcType="INTEGER" property="shopAccountId" />
    <result column="customers_number" jdbcType="SMALLINT" property="customersNumber" />
    <result column="takeout_status" jdbcType="SMALLINT" property="takeoutStatus" />
    <result column="customer_tel" jdbcType="VARCHAR" property="customerTel" />
    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
    <result column="pay_price" jdbcType="DECIMAL" property="payPrice" />
    <result column="delivery_name" jdbcType="VARCHAR" property="deliveryName" />
    <result column="delivery_tel" jdbcType="VARCHAR" property="deliveryTel" />
    <result column="create_time" jdbcType="VARCHAR" property="createTime" />
    <result column="last_modified" jdbcType="VARCHAR" property="lastModified" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="pojo.Takeout">
    <result column="takeout_address" jdbcType="LONGVARCHAR" property="takeoutAddress" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    takeout_serial, takeout_id, shop_account_id, customers_number, takeout_status, customer_tel, 
    remarks, pay_price, delivery_name, delivery_tel, create_time, last_modified
  </sql>
  <sql id="Blob_Column_List">
    takeout_address
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="pojo.TakeoutExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from takeout
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="pojo.TakeoutExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from takeout
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from takeout
    where takeout_serial = #{takeoutSerial,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from takeout
    where takeout_serial = #{takeoutSerial,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="pojo.TakeoutExample">
    delete from takeout
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="pojo.Takeout">
    insert into takeout (takeout_serial, takeout_id, shop_account_id, 
      customers_number, takeout_status, customer_tel, 
      remarks, pay_price, delivery_name, 
      delivery_tel, create_time, last_modified, 
      takeout_address)
    values (#{takeoutSerial,jdbcType=INTEGER}, #{takeoutId,jdbcType=INTEGER}, #{shopAccountId,jdbcType=INTEGER}, 
      #{customersNumber,jdbcType=SMALLINT}, #{takeoutStatus,jdbcType=SMALLINT}, #{customerTel,jdbcType=VARCHAR}, 
      #{remarks,jdbcType=VARCHAR}, #{payPrice,jdbcType=DECIMAL}, #{deliveryName,jdbcType=VARCHAR}, 
      #{deliveryTel,jdbcType=VARCHAR}, #{createTime,jdbcType=VARCHAR}, #{lastModified,jdbcType=VARCHAR}, 
      #{takeoutAddress,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="pojo.Takeout">
    insert into takeout
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="takeoutSerial != null">
        takeout_serial,
      </if>
      <if test="takeoutId != null">
        takeout_id,
      </if>
      <if test="shopAccountId != null">
        shop_account_id,
      </if>
      <if test="customersNumber != null">
        customers_number,
      </if>
      <if test="takeoutStatus != null">
        takeout_status,
      </if>
      <if test="customerTel != null">
        customer_tel,
      </if>
      <if test="remarks != null">
        remarks,
      </if>
      <if test="payPrice != null">
        pay_price,
      </if>
      <if test="deliveryName != null">
        delivery_name,
      </if>
      <if test="deliveryTel != null">
        delivery_tel,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="lastModified != null">
        last_modified,
      </if>
      <if test="takeoutAddress != null">
        takeout_address,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="takeoutSerial != null">
        #{takeoutSerial,jdbcType=INTEGER},
      </if>
      <if test="takeoutId != null">
        #{takeoutId,jdbcType=INTEGER},
      </if>
      <if test="shopAccountId != null">
        #{shopAccountId,jdbcType=INTEGER},
      </if>
      <if test="customersNumber != null">
        #{customersNumber,jdbcType=SMALLINT},
      </if>
      <if test="takeoutStatus != null">
        #{takeoutStatus,jdbcType=SMALLINT},
      </if>
      <if test="customerTel != null">
        #{customerTel,jdbcType=VARCHAR},
      </if>
      <if test="remarks != null">
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="payPrice != null">
        #{payPrice,jdbcType=DECIMAL},
      </if>
      <if test="deliveryName != null">
        #{deliveryName,jdbcType=VARCHAR},
      </if>
      <if test="deliveryTel != null">
        #{deliveryTel,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="lastModified != null">
        #{lastModified,jdbcType=VARCHAR},
      </if>
      <if test="takeoutAddress != null">
        #{takeoutAddress,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="pojo.TakeoutExample" resultType="java.lang.Long">
    select count(*) from takeout
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update takeout
    <set>
      <if test="record.takeoutSerial != null">
        takeout_serial = #{record.takeoutSerial,jdbcType=INTEGER},
      </if>
      <if test="record.takeoutId != null">
        takeout_id = #{record.takeoutId,jdbcType=INTEGER},
      </if>
      <if test="record.shopAccountId != null">
        shop_account_id = #{record.shopAccountId,jdbcType=INTEGER},
      </if>
      <if test="record.customersNumber != null">
        customers_number = #{record.customersNumber,jdbcType=SMALLINT},
      </if>
      <if test="record.takeoutStatus != null">
        takeout_status = #{record.takeoutStatus,jdbcType=SMALLINT},
      </if>
      <if test="record.customerTel != null">
        customer_tel = #{record.customerTel,jdbcType=VARCHAR},
      </if>
      <if test="record.remarks != null">
        remarks = #{record.remarks,jdbcType=VARCHAR},
      </if>
      <if test="record.payPrice != null">
        pay_price = #{record.payPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.deliveryName != null">
        delivery_name = #{record.deliveryName,jdbcType=VARCHAR},
      </if>
      <if test="record.deliveryTel != null">
        delivery_tel = #{record.deliveryTel,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=VARCHAR},
      </if>
      <if test="record.lastModified != null">
        last_modified = #{record.lastModified,jdbcType=VARCHAR},
      </if>
      <if test="record.takeoutAddress != null">
        takeout_address = #{record.takeoutAddress,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update takeout
    set takeout_serial = #{record.takeoutSerial,jdbcType=INTEGER},
      takeout_id = #{record.takeoutId,jdbcType=INTEGER},
      shop_account_id = #{record.shopAccountId,jdbcType=INTEGER},
      customers_number = #{record.customersNumber,jdbcType=SMALLINT},
      takeout_status = #{record.takeoutStatus,jdbcType=SMALLINT},
      customer_tel = #{record.customerTel,jdbcType=VARCHAR},
      remarks = #{record.remarks,jdbcType=VARCHAR},
      pay_price = #{record.payPrice,jdbcType=DECIMAL},
      delivery_name = #{record.deliveryName,jdbcType=VARCHAR},
      delivery_tel = #{record.deliveryTel,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=VARCHAR},
      last_modified = #{record.lastModified,jdbcType=VARCHAR},
      takeout_address = #{record.takeoutAddress,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update takeout
    set takeout_serial = #{record.takeoutSerial,jdbcType=INTEGER},
      takeout_id = #{record.takeoutId,jdbcType=INTEGER},
      shop_account_id = #{record.shopAccountId,jdbcType=INTEGER},
      customers_number = #{record.customersNumber,jdbcType=SMALLINT},
      takeout_status = #{record.takeoutStatus,jdbcType=SMALLINT},
      customer_tel = #{record.customerTel,jdbcType=VARCHAR},
      remarks = #{record.remarks,jdbcType=VARCHAR},
      pay_price = #{record.payPrice,jdbcType=DECIMAL},
      delivery_name = #{record.deliveryName,jdbcType=VARCHAR},
      delivery_tel = #{record.deliveryTel,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=VARCHAR},
      last_modified = #{record.lastModified,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="pojo.Takeout">
    update takeout
    <set>
      <if test="takeoutId != null">
        takeout_id = #{takeoutId,jdbcType=INTEGER},
      </if>
      <if test="shopAccountId != null">
        shop_account_id = #{shopAccountId,jdbcType=INTEGER},
      </if>
      <if test="customersNumber != null">
        customers_number = #{customersNumber,jdbcType=SMALLINT},
      </if>
      <if test="takeoutStatus != null">
        takeout_status = #{takeoutStatus,jdbcType=SMALLINT},
      </if>
      <if test="customerTel != null">
        customer_tel = #{customerTel,jdbcType=VARCHAR},
      </if>
      <if test="remarks != null">
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="payPrice != null">
        pay_price = #{payPrice,jdbcType=DECIMAL},
      </if>
      <if test="deliveryName != null">
        delivery_name = #{deliveryName,jdbcType=VARCHAR},
      </if>
      <if test="deliveryTel != null">
        delivery_tel = #{deliveryTel,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="lastModified != null">
        last_modified = #{lastModified,jdbcType=VARCHAR},
      </if>
      <if test="takeoutAddress != null">
        takeout_address = #{takeoutAddress,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where takeout_serial = #{takeoutSerial,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="pojo.Takeout">
    update takeout
    set takeout_id = #{takeoutId,jdbcType=INTEGER},
      shop_account_id = #{shopAccountId,jdbcType=INTEGER},
      customers_number = #{customersNumber,jdbcType=SMALLINT},
      takeout_status = #{takeoutStatus,jdbcType=SMALLINT},
      customer_tel = #{customerTel,jdbcType=VARCHAR},
      remarks = #{remarks,jdbcType=VARCHAR},
      pay_price = #{payPrice,jdbcType=DECIMAL},
      delivery_name = #{deliveryName,jdbcType=VARCHAR},
      delivery_tel = #{deliveryTel,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=VARCHAR},
      last_modified = #{lastModified,jdbcType=VARCHAR},
      takeout_address = #{takeoutAddress,jdbcType=LONGVARCHAR}
    where takeout_serial = #{takeoutSerial,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="pojo.Takeout">
    update takeout
    set takeout_id = #{takeoutId,jdbcType=INTEGER},
      shop_account_id = #{shopAccountId,jdbcType=INTEGER},
      customers_number = #{customersNumber,jdbcType=SMALLINT},
      takeout_status = #{takeoutStatus,jdbcType=SMALLINT},
      customer_tel = #{customerTel,jdbcType=VARCHAR},
      remarks = #{remarks,jdbcType=VARCHAR},
      pay_price = #{payPrice,jdbcType=DECIMAL},
      delivery_name = #{deliveryName,jdbcType=VARCHAR},
      delivery_tel = #{deliveryTel,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=VARCHAR},
      last_modified = #{lastModified,jdbcType=VARCHAR}
    where takeout_serial = #{takeoutSerial,jdbcType=INTEGER}
  </update>
</mapper>